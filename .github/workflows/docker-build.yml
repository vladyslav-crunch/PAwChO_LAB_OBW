name: Build and Push Docker Image

on:
  push:
    branches:
      - main

env:
  # ✅ Poprawiona nazwa obrazu (lowercase)
  IMAGE_NAME: ghcr.io/vladyslav-crunch/pawcho_lab_obw
  CACHE_REPO: docker.io/nerocrunch/cache

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for image tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          # ✅ Ręcznie ustawiona poprawna nazwa obrazu
          images: ghcr.io/vladyslav-crunch/pawcho_lab_obw
          tags: |
            type=ref,event=branch
            type=sha

      # ✅ Build single-platform image for scan (amd64)
      - name: Build image for Trivy scan (amd64 only)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          load: true
          tags: ${{ env.IMAGE_NAME }}:main
          cache-from: type=registry,ref=${{ env.CACHE_REPO }}:cache
          cache-to: type=registry,ref=${{ env.CACHE_REPO }}:cache,mode=max

      # ✅ Scan image with Trivy
      - name: Scan image for CVEs (critical/high)
        uses: aquasecurity/trivy-action@0.11.2
        with:
          image-ref: ${{ env.IMAGE_NAME }}:main
          format: "table"
          exit-code: "1"
          severity: "CRITICAL,HIGH"

      # ✅ Build and push multi-platform image (only if scan passed)
      - name: Build and push multi-arch image
        if: success()
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=${{ env.CACHE_REPO }}:cache
          cache-to: type=registry,ref=${{ env.CACHE_REPO }}:cache,mode=max
